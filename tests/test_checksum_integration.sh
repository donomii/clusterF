#!/bin/bash

# Test script to verify checksum integration in clusterF
# Run this from the clusterF directory

set -e

echo "Building clusterF..."
./build.sh

echo -e "\nRunning checksum functionality test..."
go test -run TestChecksumFunctionality -v -timeout 30s

echo -e "\nRunning standard tests to ensure no regressions..."
go test -run "TestFileManagement" -v -timeout 30s

echo -e "\nBuilding successful! Testing HTTP API responses include checksums..."

# Start clusterF in background for integration testing
echo "Starting clusterF daemon..."
./clusterF -debug -http-port=8888 &
CLUSTER_PID=$!

# Wait for startup
sleep 3

# Function to cleanup on exit
cleanup() {
    echo "Stopping clusterF daemon..."
    kill $CLUSTER_PID 2>/dev/null || true
    wait $CLUSTER_PID 2>/dev/null || true
}
trap cleanup EXIT

# Test file upload and checksum verification
echo -e "\nTesting file upload with checksum verification..."
test_file="/tmp/test_checksum_file.txt"
echo "Hello, this is a test file for checksum verification!" > "$test_file"

# Calculate expected checksum
expected_checksum=$(sha256sum "$test_file" | cut -d' ' -f1)
echo "Expected checksum: $expected_checksum"

# Upload file
echo "Uploading file..."
curl -X PUT \
    -H "Content-Type: text/plain" \
    -H "X-ClusterF-Modified-At: $(date -Iseconds)" \
    --data-binary @"$test_file" \
    "http://localhost:8888/api/files/test/checksum_test.txt" \
    -s -o /dev/null

# Get file and check headers
echo "Retrieving file and checking headers..."
response_headers=$(curl -I "http://localhost:8888/api/files/test/checksum_test.txt" -s)

# Check if checksum is in headers
if echo "$response_headers" | grep -i "x-clusterf-checksum:" | grep -q "$expected_checksum"; then
    echo "âœ“ X-ClusterF-Checksum header correctly includes checksum: $expected_checksum"
else
    echo "âœ— X-ClusterF-Checksum header missing or incorrect"
    echo "Response headers:"
    echo "$response_headers"
    exit 1
fi

# Check if ETag is set to checksum
if echo "$response_headers" | grep -i "etag:" | grep -q "\"$expected_checksum\""; then
    echo "âœ“ ETag header correctly set to checksum: \"$expected_checksum\""
else
    echo "âœ— ETag header missing or incorrect"
    echo "Response headers:"
    echo "$response_headers"
    exit 1
fi

# Test search API includes checksums
echo -e "\nTesting search API includes checksums..."
search_response=$(curl -X POST \
    -H "Content-Type: application/json" \
    -d '{"query": "test", "limit": 10}' \
    "http://localhost:8888/api/search" \
    -s)

if echo "$search_response" | grep -q "\"checksum\":\"$expected_checksum\""; then
    echo "âœ“ Search API correctly includes checksum in results"
else
    echo "âœ— Search API missing checksum in results"
    echo "Search response:"
    echo "$search_response"
    exit 1
fi

# Clean up test file
rm -f "$test_file"

echo -e "\nðŸŽ‰ All checksum integration tests passed!"
echo "âœ“ Checksums are calculated and stored correctly"
echo "âœ“ X-ClusterF-Checksum header is set in file responses"
echo "âœ“ ETag header uses checksum for caching"
echo "âœ“ Search API includes checksums in metadata"
echo "âœ“ WebDAV ETags use checksums when available"
